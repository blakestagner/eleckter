{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar BASE_URL = 'http://192.168.1.7:3050';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport function login(email, password) {\n  return axios.post(BASE_URL + \"/api/login\", {\n    'email': email,\n    'password': password\n  }).then(function (res) {\n    return res.data.response.token;\n  }).catch(function (error) {\n    console.log(error.response.data);\n    throw JSON.stringify(error.response.data);\n  });\n}\nexport function logOutTime() {\n  return axios.post(BASE_URL + \"/api/logOutTime\", {\n    'x-access-token': localStorage.getItem('x-access-token')\n  }).then(function (res) {\n    return res.data;\n  }).catch(function (err) {\n    return err;\n  });\n}\nexport function isAuthenticated() {\n  return localStorage.getItem('x-access-token') && localStorage.getItem('x-access-token-expiration') > Date.now();\n}\nexport function getUserInfo() {\n  var userToken;\n  return _regeneratorRuntime.async(function getUserInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n        case 2:\n          userToken = _context.sent;\n          return _context.abrupt(\"return\", axios.get(BASE_URL + \"/user/data\", {\n            params: {\n              'x-access-token': userToken\n            }\n          }).then(function (res) {\n            return res.data;\n          }).catch(function (err) {\n            return Promise.reject('Request Not Authenticated!');\n          }));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/Blake/react_native/furbud/db/Repository.js"],"names":["axios","BASE_URL","AsyncStorage","login","email","password","post","then","res","data","response","token","catch","error","console","log","JSON","stringify","logOutTime","localStorage","getItem","err","isAuthenticated","Date","now","getUserInfo","userToken","get","params","Promise","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,yBAAjB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,SAASC,KAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AACpC,SAAOL,KAAK,CAACM,IAAN,CAAcL,QAAd,iBAAoC;AACvC,aAASG,KAD8B;AAEvC,gBAAYC;AAF2B,GAApC,EAIJE,IAJI,CAIC,UAAAC,GAAG,EAAI;AACX,WAAOA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBC,KAAzB;AACD,GANI,EAOJC,KAPI,CAOE,UAAAC,KAAK,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAN,CAAeD,IAA3B;AACA,UAAMO,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACH,QAAN,CAAeD,IAA9B,CAAN;AACD,GAVI,CAAP;AAWH;AAED,OAAO,SAASS,UAAT,GAAuB;AAC1B,SAAOlB,KAAK,CAACM,IAAN,CAAcL,QAAd,sBAAyC;AAC5C,sBAAkBkB,YAAY,CAACC,OAAb,CAAqB,gBAArB;AAD0B,GAAzC,EAGNb,IAHM,CAGD,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAHF,EAING,KAJM,CAIA,UAAAS,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAJH,CAAP;AAKH;AAGD,OAAO,SAASC,eAAT,GAA2B;AAC9B,SAAOH,YAAY,CAACC,OAAb,CAAqB,gBAArB,KACJD,YAAY,CAACC,OAAb,CAAqB,2BAArB,IAAoDG,IAAI,CAACC,GAAL,EADvD;AAEH;AAED,OAAO,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqBvB,YAAY,CAACkB,OAAb,CAAqB,WAArB,CADrB;;AAAA;AACGM,UAAAA,SADH;AAAA,2CAGI1B,KAAK,CAAC2B,GAAN,CAAa1B,QAAb,iBAAmC;AACtC2B,YAAAA,MAAM,EAAE;AACN,gCAAkBF;AADZ;AAD8B,WAAnC,EAKHnB,IALG,CAKE,UAAAC,GAAG,EAAI;AACZ,mBAAOA,GAAG,CAACC,IAAX;AACA,WAPG,EAQHG,KARG,CAQG,UAAAS,GAAG;AAAA,mBAAIQ,OAAO,CAACC,MAAR,CAAe,4BAAf,CAAJ;AAAA,WARN,CAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\r\n//const BASE_URL = 'https://pet-api.blakestagner.com';\r\nconst BASE_URL = 'http://192.168.1.7:3050';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport function login (email, password) {\r\n    return axios.post(`${BASE_URL}/api/login`, {\r\n        'email': email,\r\n        'password': password\r\n      })\r\n      .then(res => {\r\n        return res.data.response.token\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data)\r\n        throw JSON.stringify(error.response.data)\r\n      });\r\n}\r\n\r\nexport function logOutTime () {\r\n    return axios.post(`${BASE_URL}/api/logOutTime`, { \r\n        'x-access-token': localStorage.getItem('x-access-token')\r\n    })\r\n    .then(res => res.data)\r\n    .catch(err => err);\r\n}\r\n\r\n\r\nexport function isAuthenticated() {\r\n    return localStorage.getItem('x-access-token') \r\n    && localStorage.getItem('x-access-token-expiration') > Date.now();\r\n}\r\n\r\nexport async function getUserInfo() {\r\n    const userToken = await AsyncStorage.getItem('userToken')\r\n\r\n    return axios.get(`${BASE_URL}/user/data`, { \r\n        params: { \r\n          'x-access-token': userToken\r\n        } \r\n       })\r\n       .then(res => {\r\n        return res.data\r\n       })\r\n       .catch(err => Promise.reject('Request Not Authenticated!'));\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}