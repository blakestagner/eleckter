{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react_native\\\\furbud\\\\Landing.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport { AuthContext } from \"./components/context/Context\";\nimport { UserProvider, UserContext } from \"./components/context/UserContext\";\nimport React, { useMemo, useEffect, useReducer, useContext } from 'react';\nimport { login } from \"./db/Repository\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RightSideNavigator from \"./navigation/RightSideNavigator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TopNavigation from \"./navigation/TopNavigation\";\nexport default function Landing() {\n  var user = useContext(UserContext);\n  var colorScheme = useColorScheme();\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(userName, password) {\n        var userToken, token;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = null;\n\n                if (!(userName && password)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(login(userName, password));\n\n              case 5:\n                token = _context.sent;\n                userToken = token;\n                _context.next = 9;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', token));\n\n              case 9:\n                user.setToken(userToken);\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                throw _context.t0;\n\n              case 15:\n                _context.next = 26;\n                break;\n\n              case 17:\n                if (!password) {\n                  _context.next = 21;\n                  break;\n                }\n\n                throw 'Email is empty';\n\n              case 21:\n                if (!userName) {\n                  _context.next = 25;\n                  break;\n                }\n\n                throw 'Password is empty';\n\n              case 25:\n                throw 'Fields are empty';\n\n              case 26:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 12]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              user.setToken(userToken);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 11:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return null;\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, loginState.userToken ? React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(TopNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(RightSideNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })) : React.createElement(RootStackScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Blake/react_native/furbud/Landing.js"],"names":["AuthContext","UserProvider","UserContext","React","useMemo","useEffect","useReducer","useContext","login","useColorScheme","RootStackScreen","SafeAreaProvider","AsyncStorage","RightSideNavigator","TopNavigation","Landing","user","colorScheme","initialLoginState","isLoading","userName","userToken","loginReducer","prevState","action","type","token","id","loginState","dispatch","authContext","signIn","password","setItem","setToken","signOut","removeItem","console","log","setTimeout","getItem"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport { AuthContext } from './components/context/Context';\r\nimport { UserProvider, UserContext } from './components/context/UserContext';\r\nimport React, { useMemo, useEffect, useReducer, useContext} from 'react';\r\nimport { login } from './db/Repository';\r\nimport useColorScheme from './hooks/useColorScheme';\r\nimport RootStackScreen from './screens/RootStackScreen';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport RightSideNavigator from './navigation/RightSideNavigator';\r\nimport {View, Text, StyleSheet } from 'react-native'\r\nimport TopNavigation from './navigation/TopNavigation';\r\n\r\nexport default function Landing() {\r\n  const user = useContext(UserContext);\r\n  const colorScheme = useColorScheme();\r\n\r\n  let initialLoginState = {\r\n    isLoading: true,\r\n    userName: null,\r\n    userToken: null\r\n  }\r\n\r\n  let loginReducer = (prevState, action) => {\r\n    switch( action.type ) {\r\n      case 'RETRIEVE_TOKEN':\r\n        return {\r\n          ...prevState,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case 'LOGIN':\r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false\r\n        };\r\n      case 'LOGOUT':\r\n        return {\r\n          ...prevState,\r\n          userName: null,\r\n          userToken: null,\r\n          isLoading: false\r\n        };\r\n      case 'REGISTER':\r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false\r\n        };\r\n    }\r\n  }\r\n\r\n  const [loginState, dispatch] = useReducer(loginReducer, initialLoginState)\r\n\r\n  const authContext = useMemo(() => ({\r\n    signIn: async(userName, password) => {\r\n      let userToken;\r\n      userToken = null;\r\n      if(userName && password) {\r\n        try {\r\n            const token = await login(userName, password)\r\n            userToken = token;\r\n            await AsyncStorage.setItem('userToken', token)\r\n            user.setToken(userToken)\r\n        } catch(err) {\r\n          throw err\r\n        }\r\n      } else if(password) {\r\n          throw 'Email is empty'\r\n      } else if(userName) {\r\n          throw 'Password is empty'\r\n      } else {\r\n          throw 'Fields are empty'\r\n      }\r\n      dispatch({type: 'LOGIN', id: userName, token: userToken})\r\n    },\r\n    signOut: async() => {\r\n      try {\r\n        await AsyncStorage.removeItem('userToken')\r\n      } catch(e) {\r\n        console.log(e)\r\n      }\r\n      dispatch({type: 'LOGOUT'})\r\n    }\r\n  }), [])\r\n\r\n\r\nuseEffect(() => {\r\n    setTimeout(async() => {\r\n      let userToken;\r\n      userToken = null;\r\n      try {\r\n        userToken = await AsyncStorage.getItem('userToken');\r\n        user.setToken(userToken)\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\r\n    }, 1000);\r\n  }, []); \r\n\r\n  if (loginState.isLoading) {\r\n    return null;\r\n  } \r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      { loginState.userToken ? \r\n          <SafeAreaProvider>\r\n            <TopNavigation/>\r\n            <RightSideNavigator />\r\n          </SafeAreaProvider>\r\n      : <RootStackScreen/> \r\n      }\r\n    </AuthContext.Provider>\r\n  );\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}