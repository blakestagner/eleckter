{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Blake\\\\react_native\\\\furbud\\\\components\\\\StyledText.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { Text } from \"./Themed\";\nimport { useState } from 'react';\nexport function HeaderText(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'open-sans': require(\"../assets/fonts/PaytoneOne.ttf\")\n              }));\n\n            case 2:\n              setFontLoaded(true);\n              console.log('loaded');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (!fontLoaded) {\n    return React.createElement(Text, _extends({}, props, {\n      style: [props.style],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(Text, _extends({}, props, {\n    style: [props.style, {\n      fontFamily: 'open-sans'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Blake/react_native/furbud/components/StyledText.tsx"],"names":["React","useEffect","Font","Text","useState","HeaderText","props","fontLoaded","setFontLoaded","loadAsync","require","console","log","style","fontFamily"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAASC,IAAT;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAAsC;AAC3C,kBAAoCF,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOG,UAAP;AAAA,MAAmBC,aAAnB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOC,IAAI,CAACO,SAAL,CAAe;AACnB,6BAAaC,OAAO;AADD,eAAf,CADP;;AAAA;AAICF,cAAAA,aAAa,CAAC,IAAD,CAAb;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAG,CAACL,UAAJ,EAAgB;AACd,WACE,oBAAC,IAAD,eAAUD,KAAV;AAAiB,MAAA,KAAK,EAAE,CAACA,KAAK,CAACO,KAAP,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AAED,SACE,oBAAC,IAAD,eAAUP,KAAV;AAAiB,IAAA,KAAK,EAAE,CAACA,KAAK,CAACO,KAAP,EAAc;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAd,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport * as Font from 'expo-font';\n\nimport { Text, TextProps } from './Themed';\nimport { useState } from 'react';\n\nexport function HeaderText(props: TextProps) {\n  const [fontLoaded, setFontLoaded] = useState(false)\n  \n  useEffect(() => {\n    (async () => {\n      await Font.loadAsync({\n        'open-sans': require('../assets/fonts/PaytoneOne.ttf'),\n      });\n      setFontLoaded(true);\n      console.log('loaded')\n    })()\n  }, [])\n\n  if(!fontLoaded) {\n    return (\n      <Text {...props} style={[props.style]} />\n    )\n  }\n\n  return (\n    <Text {...props} style={[props.style, { fontFamily: 'open-sans'}]} />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}